@page "/Aporte/Create"
@inject AporteServices aportesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="Aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Registrar Aporte</h5>
            </div>

            <div class="card-body">

                @*AporteId*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>AporteID</strong>
                        <InputNumber class="form-control" @bind-Value="Aporte.AporteId"></InputNumber>
                    </label>
                </div>

				@*Fecha*@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha Actual</strong></label>
                    <InputDate class="form-control" @bind-Value="Aporte.Fecha" readonly />
                    <ValidationMessage For="(() => Aporte.Fecha)" />
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Nombres</strong>
                        <InputText class="form-control" @bind-Value="Aporte.Nombre"></InputText>
                        <ValidationMessage For="(() => Aporte.Nombre)" />
                    </label>
                </div>

                @*Monto*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Monto</strong>
                        <InputNumber class="form-control" @bind-Value="Aporte.Monto"></InputNumber>
                        <ValidationMessage For="(() => Aporte.Monto)" />
                    </label>
                </div>
                

                @*footer*@
                <div class="card-footer text-center mt-2">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary bi bi-file-earmark-plus" @onclick="Nuevo"> Limpiar</button>
                        <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                        <a href="/Aporte/Index" class="btn btn-outline-secondary">
                            <span class="bi bi-arrow-left"></span> Volver
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    Aportes Aportes = new Aportes();
    private string AporteExistente = "";
    private Aportes Aporte { get; set; } = new Aportes();
    public DateTime Fecha { get; set; } = DateTime.Now;

	protected override void OnInitialized()
	{
		Aporte.Fecha = Fecha;
	}
    private async Task Guardar()
    {
        var aportes = await aportesServices.Listar(t => t.Nombre == Aporte.Nombre);
        if (aportes.Count == 1 && (aportes[0].AporteId != Aporte.AporteId))
        {
            AporteExistente = "Ya existe un aporte con ese nombre";
            return;
        }

        await aportesServices.Guardar(Aporte);
        navigationManager.NavigateTo("/Aporte/Index");
    }

    private void Nuevo()
    {
        Aporte = new Aportes();
        AporteExistente = "";
        StateHasChanged();
    }
}

