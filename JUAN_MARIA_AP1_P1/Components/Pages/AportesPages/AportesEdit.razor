@page "/Aporte/Edit/{AporteId:int}"
@inject AporteServices aportesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Aporte</PageTitle>

<EditForm Model="Aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Editar Aporte</h5>
            </div>

            <div class="card-body">

                @* AporteId *@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>AporteId</strong>
                    </label>
                    <InputNumber class="form-control" @bind-Value="Aporte.AporteId" readonly />
                </div>

                @* Fecha *@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Fecha</strong>
                    </label>
                    <InputDate class="form-control" @bind-Value="Aporte.Fecha" />
                    <ValidationMessage For="() => Aporte.Fecha" />
                </div>

                @* Nombre *@
                <div class="mb-3">
                    @if (!string.IsNullOrWhiteSpace(AporteExistente))
                    {
                        <label class="alert-warning">
                            <strong>@AporteExistente</strong>
                        </label>
                    }
                    <label class="form-label">
                        <strong>Nombre</strong>
                    </label>
                    <InputText class="form-control" @bind-Value="Aporte.Nombre" />
                    <ValidationMessage For="() => Aporte.Nombre" />
                </div>

                @* Monto *@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Monto</strong>
                    </label>
                    <InputNumber class="form-control" @bind-Value="Aporte.Monto" />
                    <ValidationMessage For="() => Aporte.Monto" />
                </div>

                @* Footer *@
                <div class="card-footer text-center mt-2">
                    <div class="btn-group" role="group">
                        <a href="/Aporte/Delete/@AporteId" class="btn btn-outline-primary bi bi-trash"> Eliminar</a>
                        <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                        <a href="/Aporte/Index" class="btn btn-outline-secondary"><span class="bi bi-arrow-left"></span> Volver</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int AporteId { get; set; }

    public Aportes Aporte { get; set; } = new();

    public string AporteExistente = "";

    protected override async Task OnInitializedAsync()
    {
        Aporte = await aportesServices.Buscar(AporteId);
    }

    private async Task Guardar()
    {
        var aportes = await aportesServices.Listar(t => t.Nombre == Aporte.Nombre);
        if (aportes.Count == 1 && (aportes[0].AporteId != Aporte.AporteId))
        {
            AporteExistente = "Ya existe un aporte con ese nombre";
            return;
        }

        await aportesServices.Guardar(Aporte);
        navigationManager.NavigateTo("/Aporte/Index");
    }
}

